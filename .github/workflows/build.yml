name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  create:
    tags:
      - v*

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    runs-on: ubuntu-latest
    if: always()
    needs: create_release
    strategy:
      max-parallel: 5
      matrix:
        platform: [
            android-arm, android-arm64, android-x64, android-x86,
            linux-armv7, linux-arm64, linux-x64, linux-x86,
            windows-x64, windows-x86, darwin-x64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Download dependencies
        run: go get -d ./...

      - name: Build ${{ matrix.platform }}
        run: |
          set -e
          make libs PLATFORM=${{ matrix.platform }}
          make ${{ matrix.platform }}

      - name: Generate ${{ matrix.platform }} zip
        id: generate_zip
        if: success() && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
        run: |
          make zip PLATFORM=${{ matrix.platform }}
          asset_path=$(ls build/binaries/*.zip)
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=asset_name::$(basename "${asset_path}")"

      - name: Upload zip to github release
        id: upload-release-asset
        if: success() && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.generate_zip.outputs.asset_path }}
          asset_name: ${{ steps.generate_zip.outputs.asset_name }}
          asset_content_type: application/zip
