name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  create:
    tags:
      - v*

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build binaries
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      max-parallel: 5
      matrix:
        platform: [
            android-arm, android-arm64, android-x64, android-x86,
            linux-armv7, linux-arm64, linux-x64, linux-x86,
            windows-x64, windows-x86, darwin-x64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        run: go get -d ./...

      - name: Build ${{ matrix.platform }}
        shell: bash
        run: |
          set -e
          make libs PLATFORM=${{ matrix.platform }}
          make ${{ matrix.platform }}

      - name: Generate ${{ matrix.platform }} zip
        if: success() && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: make zip PLATFORM=${{ matrix.platform }}

      - name: Upload ${{ matrix.platform }} zip to github release
        if: success() && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
        uses: AButler/upload-release-assets@v2.0
        with:
          files: /build/binaries/*.zip
          repo-token: ${{ secrets.GITHUB_TOKEN }}
