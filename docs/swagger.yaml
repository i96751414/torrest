basePath: /
definitions:
  api.ErrorResponse:
    properties:
      error:
        example: Houston, we have a problem!
        type: string
    type: object
  api.FileHash:
    properties:
      hash:
        type: string
    type: object
  api.FileInfoResponse:
    items:
      $ref: '#/definitions/bittorrent.FileInfo'
    type: array
  api.MessageResponse:
    properties:
      message:
        example: done
        type: string
    type: object
  api.NewTorrentResponse:
    properties:
      info_hash:
        example: 000102030405060708090a0b0c0d0e0f10111213
        type: string
    type: object
  api.TorrentInfoResponse:
    properties:
      info_hash:
        type: string
      status:
        $ref: '#/definitions/bittorrent.TorrentStatus'
        type: object
    type: object
  bittorrent.FileInfo:
    properties:
      id:
        type: integer
      length:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
  bittorrent.FileStatus:
    properties:
      buffering_progress:
        type: number
      progress:
        type: number
      state:
        type: integer
    type: object
  bittorrent.ServiceStatus:
    properties:
      download_rate:
        type: integer
      is_paused:
        type: boolean
      num_torrents:
        type: integer
      progress:
        type: number
      upload_rate:
        type: integer
    type: object
  bittorrent.TorrentStatus:
    properties:
      active_time:
        type: integer
      all_time_download:
        type: integer
      all_time_upload:
        type: integer
      download_rate:
        type: integer
      finished_time:
        type: integer
      has_metadata:
        type: boolean
      name:
        type: string
      paused:
        type: boolean
      peers:
        type: integer
      peers_total:
        type: integer
      progress:
        type: number
      seeders:
        type: integer
      seeders_total:
        type: integer
      seeding_time:
        type: integer
      state:
        type: integer
      upload_rate:
        type: integer
    type: object
  settings.ProxySettings:
    properties:
      hostname:
        type: string
      password:
        type: string
      port:
        type: integer
      type:
        type: integer
      username:
        type: string
    type: object
  settings.Settings:
    properties:
      buffer_size:
        example: 20971520
        type: integer
      connections_limit:
        example: 0
        type: integer
      disable_dht:
        example: false
        type: boolean
      disable_upnp:
        example: false
        type: boolean
      download_path:
        example: downloads
        type: string
      encryption_policy:
        example: 0
        type: integer
      limit_after_buffering:
        example: false
        type: boolean
      listen_interfaces:
        type: string
      listen_port:
        example: 6889
        type: integer
      max_download_rate:
        example: 0
        type: integer
      max_upload_rate:
        example: 0
        type: integer
      outgoing_interfaces:
        type: string
      proxy:
        $ref: '#/definitions/settings.ProxySettings'
        type: object
      seed_time_limit:
        example: 0
        type: integer
      seed_time_ratio_limit:
        example: 0
        type: integer
      session_save:
        example: 30
        type: integer
      share_ratio_limit:
        example: 0
        type: integer
      torrents_path:
        example: downloads/Torrents
        type: string
      tuned_storage:
        example: false
        type: boolean
      user_agent:
        example: 0
        type: integer
    type: object
info:
  contact:
    email: i96751414@gmail.com
    name: i96751414
    url: https://github.com/i96751414/torrest
  description: Torrent server with a REST API.
  license:
    name: GPL3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: Torrest API
  version: "1.0"
paths:
  /add/magnet:
    get:
      description: add magnet to service
      operationId: add-magnet
      parameters:
      - description: magnet URI
        in: query
        name: uri
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewTorrentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Add Magnet
  /add/torrent:
    post:
      consumes:
      - multipart/form-data
      description: add torrent file to service
      operationId: add-torrent
      parameters:
      - description: torrent file
        in: formData
        name: torrent
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewTorrentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Add Torrent File
  /pause:
    get:
      description: pause service
      operationId: pause
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: Pause
  /resume:
    get:
      description: resume service
      operationId: resume
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
      summary: Resume
  /settings/get:
    get:
      description: get settings in JSON object
      operationId: get-settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.Settings'
      summary: Get current settings
  /settings/set:
    post:
      consumes:
      - application/json
      description: set settings given the provided JSON object
      operationId: set-settings
      parameters:
      - description: Settings to be set
        in: body
        name: default
        schema:
          $ref: '#/definitions/settings.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.Settings'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Set settings
  /shutdown:
    get:
      description: shutdown server
      operationId: shutdown
      responses:
        "200":
          description: OK
      summary: Shutdown
  /status:
    get:
      description: get service status
      operationId: status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bittorrent.ServiceStatus'
      summary: Status
  /torrents:
    get:
      description: list all torrents from service
      operationId: list-torrents
      parameters:
      - description: get torrents status
        in: query
        name: status
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TorrentInfoResponse'
            type: array
      summary: List Torrents
  /torrents/{infoHash}/download:
    get:
      description: download all files from torrent
      operationId: download-torrent
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Download
  /torrents/{infoHash}/files:
    get:
      description: get a list of the torrent files and its details
      operationId: torrent-files
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.FileInfoResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get Torrent Files
  /torrents/{infoHash}/files/{file}/download:
    get:
      description: download file from torrent given its id
      operationId: download-file
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      - description: buffer file
        in: query
        name: buffer
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Download File
  /torrents/{infoHash}/files/{file}/hash:
    get:
      description: calculate file hash suitable for opensubtitles
      operationId: file-hash
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.FileHash'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Calculate file hash
  /torrents/{infoHash}/files/{file}/info:
    get:
      description: get file info from torrent given its id
      operationId: file-info
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bittorrent.FileInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get File Info
  /torrents/{infoHash}/files/{file}/serve:
    get:
      description: serve file from torrent given its id
      operationId: serve-file
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Serve File
  /torrents/{infoHash}/files/{file}/status:
    get:
      description: get file status from torrent given its id
      operationId: file-status
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bittorrent.FileStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get File Status
  /torrents/{infoHash}/files/{file}/stop:
    get:
      description: stop file download from torrent given its id
      operationId: stop-file
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: file id
        in: path
        name: file
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Stop File Download
  /torrents/{infoHash}/pause:
    get:
      description: pause torrent from service
      operationId: pause-torrent
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Pause Torrent
  /torrents/{infoHash}/remove:
    get:
      description: remove torrent from service
      operationId: remove-torrent
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      - description: delete files
        in: query
        name: delete
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Remove Torrent
  /torrents/{infoHash}/resume:
    get:
      description: resume a paused torrent
      operationId: resume-torrent
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Resume Torrent
  /torrents/{infoHash}/status:
    get:
      description: get torrent status
      operationId: torrent-status
      parameters:
      - description: torrent info hash
        in: path
        name: infoHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bittorrent.TorrentStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get Torrent Status
swagger: "2.0"
